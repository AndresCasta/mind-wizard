{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	// "tween_basic": {
	// 	"scope": "javascript",
	// 	"prefix": "import"
	// 	"body": [
	// 		"this.arena.tween.to($1, ${2:Number.EPSILON}, {",
	// 		"\t$3",
	// 		"});"
	// 	]
	// },

	// #############################################
	// ## TWEEN SYSTEM
	// #############################################
	// #region TWEEN
	"tweenTo": {
		"scope": "javascript",
		"prefix": "tween",
		"body": [
			"this.arena.tween.to(${1:obj}, ${2:Number.EPSILON}, { ${3:alpha}: ${4:1} });$0"
		]
	},
	"tweenToWithLabel": {
		"scope": "javascript",
		"prefix": "tween",
		"body": [
			"this.arena.tween.to(${1:obj}, ${2:Number.EPSILON}, { ${3:alpha}: ${4:1} }, ${5:label});$0"
		]
	},
	"addUniqueLabel": {
		"scope": "javascript",
		"prefix": "tween",
		"body": [
			"const ${1:nameLabel} = this.arena.tween.addUniqueLabel('$1');$0"
		]
	},
	"callback": {
		"scope": "javascript",
		"prefix": "tween",
		"body": [
			"this.arena.tween.to({}, Number.EPSILON, {",
			"\tonComplete: () => {",
			"\t\t$1",
			"\t},",
			"\tonReverseComplete: () => {",
			"\t\t$2",
			"\t}",
			"});$0"
		]
	},
	// #endregion TWEEN

	// #############################################
	// ## CUSTOMS
	// #############################################
	// #region COMMENTS
	"puzzleName": {
		"scope": "javascript,jsonc", // json with comments. See all language identifiers: https://code.visualstudio.com/docs/languages/identifiers
		"prefix": "comment",
		"body": [
			"/**",
			"* Puzzle ${1:1}",
			"*/"
		]
	},

	"region": {
		"scope": "javascript,jsonc", // json with comments. See all language identifiers: https://code.visualstudio.com/docs/languages/identifiers
		"prefix": "comment",
		"body": [
			"// #region $1",
			"$0",
			"// #endregion $1"
		]
	},
	// #endregion COMMENTS

	// #region functions
	"functionExpression": {
		"scope": "javascript", // json with comments. See all language identifiers: https://code.visualstudio.com/docs/languages/identifiers
		"prefix": "fn",
		"body": [
			"const ${1:fn} = function ${1:fn} (${2:args = {\\}}) {",
				"\t// Add args validation here.",
				"\t$0",
			"};"
		]
	},
	"arrowFunction": {
		"scope": "javascript", // json with comments. See all language identifiers: https://code.visualstudio.com/docs/languages/identifiers
		"prefix": "fn",
		"body": [
			"const ${1:fn} = (${2:args = {\\}}) => {",
				"\t// Add args validation here.",
				"\t$0",
			"};"
		]
	},
	"method": {
		"scope": "javascript", // json with comments. See all language identifiers: https://code.visualstudio.com/docs/languages/identifiers
		"prefix": "fn",
		"body": [
			"${1:_methodName} (${2:args = {\\}}) {",
				"\t// Add args validation here.",
				"\t$0",
			"};"
		]
	},
	// #endregion functions

	// #############################################
	// ## CUSTOMS
	// #############################################
	// #region CUSTOMS
	"For Each Method": {
		"scope": "javascript",
		"prefix": "foreach",
		"body": [
			"${1:array}.forEach((${2:elem}) => {",
			"\t$0",
			"});"
		]
	}
	// #endregion CUSTOMS
}